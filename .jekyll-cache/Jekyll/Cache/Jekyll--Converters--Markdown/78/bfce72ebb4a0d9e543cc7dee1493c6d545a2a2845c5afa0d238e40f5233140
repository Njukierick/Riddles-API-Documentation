I"[¦<h1 id="introduction">Introduction</h1>

<p>I created this simple API to experiment with API documentation tools. This project was created with Node.js with Express and MongoDB with Mongoose.</p>

<p>I am using <a href="https://www.netlify.com/">Netlify</a> to host a live version of the app so that the interactive tools are usable.</p>

<p>For this project, Iâ€™ve chosen to document the API with three different tools: <a href="https://swagger.io/tools/swagger-ui/">Swagger UI</a>, <a href="https://stoplight.io/">Stoplight</a>, and <a href="https://en.wikipedia.org/wiki/Markdown">Markdown</a>. I created a yaml file that follows the <a href="https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.3.md">OpenAPI Specification Version 3.0.3</a> and used both Swagger UI and Stoplight to render the documentation. I also created the documentation using Markdown, which makes up the main part of this README file. Select the links below to check out the results of each.</p>

<ul>
  <li>
    <p><a href="https://riddleAPI.netlify.app/api-docs">API documentation using Swagger UI</a></p>

    <p><a href="https://riddleapi.netlify.app/api-docs"><img src="images/swagger.png?raw=true" alt="Swagger UI screenshot" width="400" /></a></p>
  </li>
  <li>
    <p><a href="https://njukierick.stoplight.io/docs/riddles-api">API documentation using Stoplight</a></p>

    <p><a href="https://njukierick.stoplight.io/docs/riddles-api"><img src="images/stoplight.png?raw=true" alt="Stoplight.io screenshot" width="400" /></a></p>
  </li>
  <li>
    <p><a href="#riddles-api-documentation">API documentation using Markdown</a></p>

    <p><a href="#riddles-api-documentation"><img src="images/markdown.png?raw=true" alt="Markdown screenshot" width="400" /></a></p>
  </li>
</ul>

<h1 id="riddles-api-documentation">Riddles API Documentation</h1>

<h3 id="contents">Contents</h3>

<ul>
  <li><a href="#overview">Overview</a></li>
  <li><a href="#authentication">Authentication</a></li>
  <li><a href="#usage">Usage</a>
    <ul>
      <li><a href="#getting-riddles-in-bulk-or-by-id">Get riddles in bulk or by id</a></li>
      <li><a href="#getting-one-random-riddle">Get a random riddle</a></li>
      <li><a href="#creating-or-deleting-a-riddle">Create or delete a riddle</a></li>
      <li><a href="#modifying-a-riddle">Modify a riddle</a></li>
    </ul>
  </li>
</ul>

<h2 id="overview">Overview</h2>

<p>Are you looking for a way to add riddles to your application? Rather than build the feature yourself, you can use this pre-built API. The Riddles API can return riddles from a variety of categories. Current categories include easy, hard, kids, math, word, and funny. Request one random riddle or request them all! Riddles in the original database are from <a href="https://parade.com/947956/parade/riddles/">https://parade.com/947956/parade/riddles/</a>. New riddles can be added and updated via the API.</p>

<p><strong>Riddles API Server</strong>: <code class="language-plaintext highlighter-rouge">https://riddleapi.netlify.app</code></p>

<h2 id="authentication">Authentication</h2>

<p>No authentication is needed to use this API.</p>

<h2 id="usage">Usage</h2>

<p>The APIâ€™s endpoints and usage are described in the following sections:</p>

<ul>
  <li><a href="#getting-riddles-in-bulk-or-by-id">Get riddles in bulk or by id</a>:
    <ul>
      <li><a href="#-to-get-all-riddles-or-an-individual-riddle">Get all riddles or an individual riddle</a></li>
      <li><a href="#-to-get-all-riddles-from-a-specific-category">Get all riddles from a specific category</a></li>
    </ul>
  </li>
  <li><a href="#getting-one-random-riddle">Get one random riddle</a>:
    <ul>
      <li><a href="#-to-select-a-random-riddle-from-the-entire-database">Select a random riddle from the database</a></li>
      <li><a href="#-to-select-a-random-riddle-from-a-specific-category">Select a random riddle from a specific category</a></li>
    </ul>
  </li>
  <li><a href="#creating-or-deleting-a-riddle">Create or delete a riddle</a>:
    <ul>
      <li><a href="#-to-add-a-new-riddle-to-the-database">Add a riddle to the database</a></li>
      <li><a href="#-to-delete-a-riddle-from-the-database">Delete a riddle from the database</a></li>
    </ul>
  </li>
  <li><a href="#modifying-a-riddle">Modify a riddle</a>:
    <ul>
      <li><a href="#-to-update-an-existing-riddle-by-overwriting">Update an existing riddle by overwriting</a></li>
      <li><a href="#-to-update-a-field-of-an-existing-riddle">Update a field of an existing riddle</a></li>
    </ul>
  </li>
</ul>

<h3 id="getting-riddles-in-bulk-or-by-id">Getting riddles in bulk or by id</h3>

<h4 id="-to-get-all-riddles-or-an-individual-riddle">ðŸ“Œ To get all riddles or an individual riddle</h4>

<table>
  <thead>
    <tr>
      <th>HTTP Method</th>
      <th>Endpoint</th>
      <th>Summary</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">GET</code></td>
      <td>/riddles</td>
      <td>Returns Riddle objects</td>
    </tr>
  </tbody>
</table>

<p>Use the optional <code class="language-plaintext highlighter-rouge">id</code> query parameter to have the corresponding Riddle object returned. Omit the query parameter to have an array of all the Riddle objects in the database returned.</p>

<p>The optional query parameter is defined as</p>

<table>
  <thead>
    <tr>
      <th>Parameter</th>
      <th>Type</th>
      <th>Required</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>id</td>
      <td>string</td>
      <td>Optional</td>
      <td>If the database id for a riddle is known, use this parameter to get that specific Riddle object. <strong>Omit for all riddles to be returned.</strong></td>
    </tr>
  </tbody>
</table>

<p><strong>Example request</strong></p>

<p>A curl request to get <em>all</em> riddles:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl -X GET 'https://riddleapi.netlify.app/riddles'
</code></pre></div></div>

<p><strong>Example response</strong></p>

<p>A successful response has an HTTP status code of <code class="language-plaintext highlighter-rouge">200</code> and is an array of Riddle objects:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>HTTP/1.1 200 OK
Content-Type: application/json; charset=utf-8

[
  {
    "_id": "60bc3ffb5dcf8ac52f16a7fd",
    "riddle": "What has to be broken before you can use it?",
    "answer": "An egg",
    "category": "easy",
    "source": "https://parade.com/947956/parade/riddles/"
  },
  {
    "_id": "60bc3ffb5dcf8ac52f16a800",
    "riddle": "I'm tall when I'm young, and I'm short when I'm old. What am I?",
    "answer": "A candle",
    "category": "easy",
    "source": "https://parade.com/947956/parade/riddles/"
  }
]
</code></pre></div></div>

<p>The same endpoint can be used with the <code class="language-plaintext highlighter-rouge">id</code> query parameter to get an individual riddle.</p>

<p><strong>Example request</strong></p>

<p>A curl request to get an <em>individual</em> riddle:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl -X GET 'https://riddleapi.netlify.app/riddles?id=60bd0708d7dcc31bd9376abe'
</code></pre></div></div>

<p><strong>Example response</strong></p>

<p>A successful response has an HTTP status code of <code class="language-plaintext highlighter-rouge">200</code> and is an individual Riddle object:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>HTTP/1.1 200 OK
Content-Type: application/json; charset=utf-8

{
  "_id": "60bd0708d7dcc31bd9376abe",
  "riddle": "I'm tall when I'm young, and I'm short when I'm old. What am I?",
  "answer": "A candle",
  "category": "easy",
  "source": "https://parade.com/947956/parade/riddles/"
}
</code></pre></div></div>

<p>The Riddle object returned uses this schema:</p>

<table>
  <thead>
    <tr>
      <th>Field</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>_id</td>
      <td>string</td>
      <td>The database id for the Riddle object</td>
    </tr>
    <tr>
      <td>riddle</td>
      <td>string</td>
      <td>The riddleâ€™s question</td>
    </tr>
    <tr>
      <td>answer</td>
      <td>string</td>
      <td>The riddleâ€™s answer</td>
    </tr>
    <tr>
      <td>category</td>
      <td>string</td>
      <td>A classification of the riddle. The original database includes the categories: easy, hard, funny, kids, math, and word. This is not an enum and more can be added.</td>
    </tr>
    <tr>
      <td>source</td>
      <td>string</td>
      <td>The source of the riddle</td>
    </tr>
  </tbody>
</table>

<p><strong>Possible error responses</strong></p>

<p>A <code class="language-plaintext highlighter-rouge">GET</code> request to the /riddles endpoint may return the following errors:</p>

<table>
  <thead>
    <tr>
      <th>Error code</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>404</td>
      <td><code class="language-plaintext highlighter-rouge">Not Found</code>: This error will occur if the requested riddle <code class="language-plaintext highlighter-rouge">id</code> is not found in the database. It could also occur if the database is empty.</td>
    </tr>
    <tr>
      <td>500</td>
      <td><code class="language-plaintext highlighter-rouge">Internal Server Error</code>: An unexpected error occurred on the server.</td>
    </tr>
  </tbody>
</table>

<p><a href="#usage">Back to usage list</a></p>

<hr />

<h4 id="-to-get-all-riddles-from-a-specific-category">ðŸ“Œ To get all riddles from a specific category</h4>

<table>
  <thead>
    <tr>
      <th>HTTP Method</th>
      <th>Endpoint</th>
      <th>Summary</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">GET</code></td>
      <td>/riddles/{category}</td>
      <td>Returns all riddles from a specific category</td>
    </tr>
  </tbody>
</table>

<p>Pass the desired category as a path parameter in the request. An array of Riddle objects matching the specific category is returned.</p>

<p>The path parameter is defined as:</p>

<table>
  <thead>
    <tr>
      <th>Parameter</th>
      <th>Type</th>
      <th>Required</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>category</td>
      <td>string</td>
      <td>Required</td>
      <td>A riddle category. The seed data (the initial riddles added to the database) include the following categories: easy, hard, funny, kids, math, and word.</td>
    </tr>
  </tbody>
</table>

<p><strong>Example request</strong></p>

<p>A curl request to get all riddles from the <em>easy</em> category:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl -X GET 'https://riddleapi.netlify.app/riddles/easy'
</code></pre></div></div>

<p><strong>Example response</strong></p>

<p>A successful response is an array of Riddle objects:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>HTTP/1.1 200 OK
Content-Type: application/json; charset=utf-8
[
  {
    "_id": "60bd0708d7dcc31bd9376abe",
    "riddle": "I'm tall when I'm young, and I'm short when I'm old. What am I?",
    "answer": "A candle",
    "category": "easy",
    "source": "https://parade.com/947956/parade/riddles/"
  }
]
</code></pre></div></div>

<p>The Riddle objects returned use this schema:</p>

<table>
  <thead>
    <tr>
      <th>Field</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>_id</td>
      <td>string</td>
      <td>The database id for the Riddle object</td>
    </tr>
    <tr>
      <td>riddle</td>
      <td>string</td>
      <td>The riddleâ€™s question</td>
    </tr>
    <tr>
      <td>answer</td>
      <td>string</td>
      <td>The riddleâ€™s answer</td>
    </tr>
    <tr>
      <td>category</td>
      <td>string</td>
      <td>A classification of the riddle. The original database includes the categories: easy, hard, funny, kids, math, and word. This is not an enum and more can be added.</td>
    </tr>
    <tr>
      <td>source</td>
      <td>string</td>
      <td>The source of the riddle</td>
    </tr>
  </tbody>
</table>

<p><strong>Possible error responses</strong></p>

<p>A <code class="language-plaintext highlighter-rouge">GET</code> request to the /riddles/{category} endpoint may return the following errors:</p>

<table>
  <thead>
    <tr>
      <th>Error code</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>404</td>
      <td><code class="language-plaintext highlighter-rouge">Not Found</code>: This error will be returned if there are no riddles with the requested <code class="language-plaintext highlighter-rouge">category</code> in the database.</td>
    </tr>
    <tr>
      <td>500</td>
      <td><code class="language-plaintext highlighter-rouge">Internal Server Error</code>: An unexpected error occurred on the server.</td>
    </tr>
  </tbody>
</table>

<p><a href="#usage">Back to usage list</a></p>

<hr />

<h3 id="getting-one-random-riddle">Getting one random riddle</h3>

<h4 id="-to-select-a-random-riddle-from-the-entire-database">ðŸ“Œ To select a random riddle from the entire database:</h4>

<table>
  <thead>
    <tr>
      <th>HTTP Method</th>
      <th>Endpoint</th>
      <th>Summary</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">GET</code></td>
      <td>/riddles/random</td>
      <td>Returns a random riddle</td>
    </tr>
  </tbody>
</table>

<p>Make a <code class="language-plaintext highlighter-rouge">GET</code> request. A random Riddle object from the entire database is selected and returned.</p>

<p><strong>Example request</strong></p>

<p>A curl request to get a random riddle:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl -X GET 'https://riddleapi.netlify.app/riddles/random'
</code></pre></div></div>

<p>A successful response will return an HTTP status code of <code class="language-plaintext highlighter-rouge">200</code>. The Riddle object returned uses this schema:</p>

<table>
  <thead>
    <tr>
      <th>Field</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>_id</td>
      <td>string</td>
      <td>The database id for the Riddle object</td>
    </tr>
    <tr>
      <td>riddle</td>
      <td>string</td>
      <td>The riddleâ€™s question</td>
    </tr>
    <tr>
      <td>answer</td>
      <td>string</td>
      <td>The riddleâ€™s answer</td>
    </tr>
    <tr>
      <td>category</td>
      <td>string</td>
      <td>A classification of the riddle. The original database includes the categories: easy, hard, funny, kids, math, and word. This is not an enum and more can be added.</td>
    </tr>
    <tr>
      <td>source</td>
      <td>string</td>
      <td>The source of the riddle</td>
    </tr>
  </tbody>
</table>

<p><strong>Example response</strong></p>

<p>A successful response is an individual Riddle object:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>HTTP/1.1 200 OK
Content-Type: application/json; charset=utf-8

{
  "_id": "60bd0708d7dcc31bd9376abe",
  "riddle": "I'm tall when I'm young, and I'm short when I'm old. What am I?",
  "answer": "A candle",
  "category": "easy",
  "source": "https://parade.com/947956/parade/riddles/"
}
</code></pre></div></div>

<p><strong>Possible error responses</strong></p>

<p>A <code class="language-plaintext highlighter-rouge">GET</code> request to the /riddles/random endpoint may return the following errors:</p>

<table>
  <thead>
    <tr>
      <th>Error code</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>404</td>
      <td><code class="language-plaintext highlighter-rouge">Not Found</code>: This error will be returned if there are no riddles in the database.</td>
    </tr>
    <tr>
      <td>500</td>
      <td><code class="language-plaintext highlighter-rouge">Internal Server Error</code>: An unexpected error occurred on the server.</td>
    </tr>
  </tbody>
</table>

<p><a href="#usage">Back to usage list</a></p>

<hr />

<h4 id="-to-select-a-random-riddle-from-a-specific-category">ðŸ“Œ To select a random riddle from a specific category:</h4>

<table>
  <thead>
    <tr>
      <th>HTTP Method</th>
      <th>Endpoint</th>
      <th>Summary</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">GET</code></td>
      <td>/riddles/{category}/random</td>
      <td>Returns a random riddle from the category specified</td>
    </tr>
  </tbody>
</table>

<p>Pass the desired category as a path parameter in the request. A random Riddle object from the specified category will be selected and returned.</p>

<p>The path parameter is defined as:</p>

<table>
  <thead>
    <tr>
      <th>Parameter</th>
      <th>Type</th>
      <th>Required</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>category</td>
      <td>string</td>
      <td>Required</td>
      <td>A riddle category. The seed data (the initial riddles added to the database) include the following categories: easy, hard, funny, kids, math, and word.</td>
    </tr>
  </tbody>
</table>

<p><strong>Example request</strong></p>

<p>A curl request to get a random riddle from the <em>easy</em> category:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl -X GET 'https://riddleapi.netlify.app/riddles/easy/random'
</code></pre></div></div>

<p>A successful response will return an HTTP status code of <code class="language-plaintext highlighter-rouge">200</code>. The Riddle object returned uses this schema:</p>

<table>
  <thead>
    <tr>
      <th>Field</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>_id</td>
      <td>string</td>
      <td>The database id for the Riddle object</td>
    </tr>
    <tr>
      <td>riddle</td>
      <td>string</td>
      <td>The riddleâ€™s question</td>
    </tr>
    <tr>
      <td>answer</td>
      <td>string</td>
      <td>The riddleâ€™s answer</td>
    </tr>
    <tr>
      <td>category</td>
      <td>string</td>
      <td>A classification of the riddle. The original database includes the categories: easy, hard, funny, kids, math, and word. This is not an enum and more can be added.</td>
    </tr>
    <tr>
      <td>source</td>
      <td>string</td>
      <td>The source of the riddle</td>
    </tr>
  </tbody>
</table>

<p><strong>Example response</strong></p>

<p>A successful response is an individual Riddle object:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>HTTP/1.1 200 OK
Content-Type: application/json; charset=utf-8

{
  "_id": "60bd0708d7dcc31bd9376abe",
  "riddle": "I'm tall when I'm young, and I'm short when I'm old. What am I?",
  "answer": "A candle",
  "category": "easy",
  "source": "https://parade.com/947956/parade/riddles/"
}
</code></pre></div></div>

<p><strong>Possible error responses</strong></p>

<p>A <code class="language-plaintext highlighter-rouge">GET</code> request to the /riddles/{category}/random endpoint may return the following errors:</p>

<table>
  <thead>
    <tr>
      <th>Error code</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>404</td>
      <td><code class="language-plaintext highlighter-rouge">Not Found</code>: This error will be returned if there are no riddles with the requested <code class="language-plaintext highlighter-rouge">category</code> in the database.</td>
    </tr>
    <tr>
      <td>500</td>
      <td><code class="language-plaintext highlighter-rouge">Internal Server Error</code>: An unexpected error occurred on the server.</td>
    </tr>
  </tbody>
</table>

<p><a href="#usage">Back to usage list</a></p>

<hr />

<h3 id="creating-or-deleting-a-riddle">Creating or deleting a riddle</h3>

<h4 id="-to-add-a-new-riddle-to-the-database">ðŸ“Œ To add a new riddle to the database</h4>

<table>
  <thead>
    <tr>
      <th>HTTP Method</th>
      <th>Endpoint</th>
      <th>Summary</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">POST</code></td>
      <td>/riddles</td>
      <td>Adds a new riddle to the database</td>
    </tr>
  </tbody>
</table>

<p>Use the JSON request body to add a new Riddle object to the database.</p>

<p>The request body should use the following schema:</p>

<table>
  <thead>
    <tr>
      <th>Field</th>
      <th>Type</th>
      <th>Required</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>riddle</td>
      <td>string</td>
      <td>Required</td>
      <td>The riddleâ€™s question</td>
    </tr>
    <tr>
      <td>answer</td>
      <td>string</td>
      <td>Required</td>
      <td>The riddleâ€™s answer</td>
    </tr>
    <tr>
      <td>category</td>
      <td>string</td>
      <td>Required</td>
      <td>A one-word classification of the riddle. It should not contain spaces. The original database includes the categories: easy, hard, funny, kids, math, and word. This is not an enum and more can be added.</td>
    </tr>
    <tr>
      <td>source</td>
      <td>string</td>
      <td>Optional</td>
      <td>The source of the riddle</td>
    </tr>
  </tbody>
</table>

<p><strong>Note</strong>: The <code class="language-plaintext highlighter-rouge">Content-Type</code> header should be set to <code class="language-plaintext highlighter-rouge">application/json</code>.</p>

<p><strong>Example request</strong></p>

<p>A curl request to add a new riddle:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl -X POST \
  'https://riddleapi.netlify.app/riddles' \
  -H 'Content-Type: application/json' \
  -d '{
  "riddle": "There'\''s only one word in the dictionary that'\''s spelled wrong. What is it?",
  "answer": "The word '\''wrong.'\'' It'\''s the only word that'\''s spelled W-R-O-N-G.",
  "category": "kids",
  "source": "https://www.prodigygame.com/main-en/blog/riddles-for-kids/"
}'
</code></pre></div></div>

<p>A successful response will return an HTTP status code of <code class="language-plaintext highlighter-rouge">201</code> and have the following schema:</p>

<table>
  <thead>
    <tr>
      <th>Field</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>message</td>
      <td>string</td>
      <td>A brief success message</td>
    </tr>
    <tr>
      <td>content</td>
      <td>object</td>
      <td>Top-level containing Riddle object</td>
    </tr>
  </tbody>
</table>

<p>Where the Riddle object has this schema:</p>

<table>
  <thead>
    <tr>
      <th>Field</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>_id</td>
      <td>string</td>
      <td>The database id for the Riddle object</td>
    </tr>
    <tr>
      <td>riddle</td>
      <td>string</td>
      <td>The riddleâ€™s question</td>
    </tr>
    <tr>
      <td>answer</td>
      <td>string</td>
      <td>The riddleâ€™s answer</td>
    </tr>
    <tr>
      <td>category</td>
      <td>string</td>
      <td>A classification of the riddle. The original database includes the categories: easy, hard, funny, kids, math, and word. This is not an enum and more can be added.</td>
    </tr>
    <tr>
      <td>source</td>
      <td>string</td>
      <td>The source of the riddle</td>
    </tr>
    <tr>
      <td>__v</td>
      <td>number</td>
      <td>An internal versioning number used by Mongoose (the Object Data Model library used to connect to the MongoDB database).</td>
    </tr>
  </tbody>
</table>

<p><strong>Example response</strong></p>

<p>A successful response to a <code class="language-plaintext highlighter-rouge">POST</code> request is an object like below:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>HTTP/1.1 201 Created
Content-Type: application/json; charset=utf-8

{
  "message": "Successfully added new riddle",
  "content": {
    "_id": "60bd0708d7dcc31bd9376abe",
    "riddle": "I'm tall when I'm young, and I'm short when I'm old. What am I?",
    "answer": "A candle",
    "category": "easy",
    "source": "https://parade.com/947956/parade/riddles/",
    "__v": 0
  }
}
</code></pre></div></div>

<p><strong>Possible error responses</strong></p>

<p>A <code class="language-plaintext highlighter-rouge">POST</code> request to the /riddles endpoint may return the following errors.</p>

<table>
  <thead>
    <tr>
      <th>Error code</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>400</td>
      <td><code class="language-plaintext highlighter-rouge">Bad Request</code>: This error will be returned if a required field in the request body is missing or if the <code class="language-plaintext highlighter-rouge">category</code> field contains a space.</td>
    </tr>
    <tr>
      <td>500</td>
      <td><code class="language-plaintext highlighter-rouge">Internal Server Error</code>: An unexpected error occurred on the server.</td>
    </tr>
  </tbody>
</table>

<p><a href="#usage">Back to usage list</a></p>

<hr />

<h4 id="-to-delete-a-riddle-from-the-database">ðŸ“Œ To delete a riddle from the database</h4>

<table>
  <thead>
    <tr>
      <th>HTTP Method</th>
      <th>Endpoint</th>
      <th>Summary</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">DELETE</code></td>
      <td>/riddles</td>
      <td>Deletes a riddle from the database</td>
    </tr>
  </tbody>
</table>

<p>Select a Riddle object to delete by setting the query parameter to its <code class="language-plaintext highlighter-rouge">id</code>. Currently, deleting seed data (the initial riddles added to the database) is not allowed.</p>

<p>The query parameter is defined as:</p>

<table>
  <thead>
    <tr>
      <th>Parameter</th>
      <th>Type</th>
      <th>Required</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>id</td>
      <td>string</td>
      <td>Required</td>
      <td>The database <code class="language-plaintext highlighter-rouge">id</code> for the riddle. This is needed for <code class="language-plaintext highlighter-rouge">PUT</code>, <code class="language-plaintext highlighter-rouge">PATCH</code>, or <code class="language-plaintext highlighter-rouge">DELETE</code> requests which are operations performed on an existing riddle.</td>
    </tr>
  </tbody>
</table>

<p><strong>Example request</strong></p>

<p>A curl request to delete a riddle:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl -X DELETE 'https://riddleapi.netlify.app/riddles?id=60bc3adb1e6946b94ca7a70a'
</code></pre></div></div>

<p>A successful response will return an HTTP status code of <code class="language-plaintext highlighter-rouge">200</code> and have the following schema:</p>

<table>
  <thead>
    <tr>
      <th>Field</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>message</td>
      <td>string</td>
      <td>A brief success message</td>
    </tr>
  </tbody>
</table>

<p><strong>Example response</strong></p>

<p>A successful response to a DELETE request:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>HTTP/1.1 200 OK
Content-Type: application/json; charset=utf-8

{
  "message": Successfully deleted riddle"
}
</code></pre></div></div>

<p><strong>Possible error responses</strong></p>

<p>A <code class="language-plaintext highlighter-rouge">DELETE</code> request to the /riddles endpoint may return the following errors:</p>

<table>
  <thead>
    <tr>
      <th>Error code</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>403</td>
      <td><code class="language-plaintext highlighter-rouge">Forbidden</code>: This error will be returned if you try to delete the seed data (the initial riddles added to the database).</td>
    </tr>
    <tr>
      <td>404</td>
      <td><code class="language-plaintext highlighter-rouge">Not Found</code>: This error will occur if the requested riddle <code class="language-plaintext highlighter-rouge">id</code> is not found in the database.</td>
    </tr>
    <tr>
      <td>500</td>
      <td><code class="language-plaintext highlighter-rouge">Internal Server Error</code>: An unexpected error occurred on the server.</td>
    </tr>
  </tbody>
</table>

<p><a href="#usage">Back to usage list</a></p>

<hr />

<h3 id="modifying-a-riddle">Modifying a riddle</h3>

<h4 id="-to-update-an-existing-riddle-by-overwriting">ðŸ“Œ To update an existing riddle by overwriting</h4>

<table>
  <thead>
    <tr>
      <th>HTTP Method</th>
      <th>Endpoint</th>
      <th>Summary</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">PUT</code></td>
      <td>/riddles</td>
      <td>Updates (by overwriting) a riddle in the database</td>
    </tr>
  </tbody>
</table>

<p>Select a Riddle object to update by setting the query parameter to its <code class="language-plaintext highlighter-rouge">id</code>. Use the JSON request body to set new values. Fields set in the request body will overwrite all existing values. Omitting a non-required field from the request body sets that field to null. Currently, updating seed data (the initial riddles added to the database) is not allowed.</p>

<p>The query parameter is defined as:</p>

<table>
  <thead>
    <tr>
      <th>Parameter</th>
      <th>Type</th>
      <th>Required</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>id</td>
      <td>string</td>
      <td>Required</td>
      <td>The database <code class="language-plaintext highlighter-rouge">id</code> for the riddle. This is needed for <code class="language-plaintext highlighter-rouge">PUT</code>, <code class="language-plaintext highlighter-rouge">PATCH</code>, or <code class="language-plaintext highlighter-rouge">DELETE</code> requests which are operations performed on an existing riddle.</td>
    </tr>
  </tbody>
</table>

<p>The request body should use the following schema:</p>

<table>
  <thead>
    <tr>
      <th>Field</th>
      <th>Type</th>
      <th>Required</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>riddle</td>
      <td>string</td>
      <td>Required</td>
      <td>The riddleâ€™s question</td>
    </tr>
    <tr>
      <td>answer</td>
      <td>string</td>
      <td>Required</td>
      <td>The riddleâ€™s answer</td>
    </tr>
    <tr>
      <td>category</td>
      <td>string</td>
      <td>Required</td>
      <td>A one-word classification of the riddle. It should not contain spaces. The original database includes the categories: easy, hard, funny, kids, math, and word. This is not an enum and more can be added.</td>
    </tr>
    <tr>
      <td>source</td>
      <td>string</td>
      <td>Optional</td>
      <td>The source of the riddle</td>
    </tr>
  </tbody>
</table>

<p><strong>Note</strong>: The <code class="language-plaintext highlighter-rouge">Content-Type</code> header should be set to <code class="language-plaintext highlighter-rouge">application/json</code>.</p>

<p><strong>Example request</strong></p>

<p>A curl request to update (overwrite) a riddle:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl -X PUT \
  'http://riddleapi.netlify.app/riddles?id=60bd0708d7dcc31bd9376abe' \
  -H 'Content-Type: application/json' \
  -d '{
  "riddle": "There'\''s only one word in the dictionary that'\''s spelled wrong. What is it?",
  "answer": "The word '\''wrong.'\'' It'\''s the only word that'\''s spelled W-R-O-N-G.",
  "category": "kids",
  "source": "https://www.prodigygame.com/main-en/blog/riddles-for-kids/"
}'
</code></pre></div></div>

<p>A successful response will return an HTTP status code of <code class="language-plaintext highlighter-rouge">200</code> and have the following schema:</p>

<table>
  <thead>
    <tr>
      <th>Field</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>message</td>
      <td>string</td>
      <td>A brief success message</td>
    </tr>
    <tr>
      <td>content</td>
      <td>object</td>
      <td>Top-level containing Riddle object</td>
    </tr>
  </tbody>
</table>

<p>Where the Riddle object has this schema:</p>

<table>
  <thead>
    <tr>
      <th>Field</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>_id</td>
      <td>string</td>
      <td>The database id for the Riddle object</td>
    </tr>
    <tr>
      <td>riddle</td>
      <td>string</td>
      <td>The riddleâ€™s question</td>
    </tr>
    <tr>
      <td>answer</td>
      <td>string</td>
      <td>The riddleâ€™s answer</td>
    </tr>
    <tr>
      <td>category</td>
      <td>string</td>
      <td>A classification of the riddle. The original database includes the categories: easy, hard, funny, kids, math, and word. This is not an enum and more can be added.</td>
    </tr>
    <tr>
      <td>source</td>
      <td>string</td>
      <td>The source of the riddle</td>
    </tr>
  </tbody>
</table>

<p><strong>Example response</strong></p>

<p>A successful response to a <code class="language-plaintext highlighter-rouge">PUT</code> request is an object like below:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>HTTP/1.1 200 OK
Content-Type: application/json; charset=utf-8

{
  "message": "Successfully updated riddle",
  "content": {
    "_id": "60bd0708d7dcc31bd9376abe",
    "riddle": "I'm tall when I'm young, and I'm short when I'm old. What am I?",
    "answer": "A candle",
    "category": "easy",
    "source": "https://parade.com/947956/parade/riddles/",
  }
}
</code></pre></div></div>

<p><strong>Possible error responses</strong></p>

<p>A <code class="language-plaintext highlighter-rouge">PUT</code> request to the /riddles endpoint may return the following errors:</p>

<table>
  <thead>
    <tr>
      <th>Error code</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>400</td>
      <td><code class="language-plaintext highlighter-rouge">Bad Request</code>: This error will be returned if a required field in the request body is missing or if the <code class="language-plaintext highlighter-rouge">category</code> field contains a space.</td>
    </tr>
    <tr>
      <td>403</td>
      <td><code class="language-plaintext highlighter-rouge">Forbidden</code>: This error will be returned if you try to modify the seed data (the initial riddles added to the database).</td>
    </tr>
    <tr>
      <td>404</td>
      <td><code class="language-plaintext highlighter-rouge">Not Found</code>: This error will occur if the requested riddle <code class="language-plaintext highlighter-rouge">id</code> is not found in the database.</td>
    </tr>
    <tr>
      <td>500</td>
      <td><code class="language-plaintext highlighter-rouge">Internal Server Error</code>: An unexpected error occurred on the server.</td>
    </tr>
  </tbody>
</table>

<p><a href="#usage">Back to usage list</a></p>

<hr />

<h4 id="-to-update-a-field-of-an-existing-riddle">ðŸ“Œ To update a field of an existing riddle</h4>

<table>
  <thead>
    <tr>
      <th>HTTP Method</th>
      <th>Endpoint</th>
      <th>Summary</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">PATCH</code></td>
      <td>/riddles</td>
      <td>Updates individual fields of a riddle in the database</td>
    </tr>
  </tbody>
</table>

<p>Select a Riddle object to update by setting the query parameter to its <code class="language-plaintext highlighter-rouge">id</code>. Use the JSON request body to set one or more fields to a new value. Omitted fields retain their values. Currently, updating seed data (the initial riddles added to the database) is not allowed.</p>

<p>The query parameter is defined as:</p>

<table>
  <thead>
    <tr>
      <th>Parameter</th>
      <th>Type</th>
      <th>Required</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>id</td>
      <td>string</td>
      <td>Required</td>
      <td>The database <code class="language-plaintext highlighter-rouge">id</code> for the riddle. This is needed for <code class="language-plaintext highlighter-rouge">PUT</code>, <code class="language-plaintext highlighter-rouge">PATCH</code>, or <code class="language-plaintext highlighter-rouge">DELETE</code> requests which are operations performed on an existing riddle.</td>
    </tr>
  </tbody>
</table>

<p>The request body should use the following schema:</p>

<table>
  <thead>
    <tr>
      <th>Field</th>
      <th>Type</th>
      <th>Required</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>riddle</td>
      <td>string</td>
      <td>Optional</td>
      <td>An update to the riddleâ€™s question</td>
    </tr>
    <tr>
      <td>answer</td>
      <td>string</td>
      <td>Optional</td>
      <td>An update to the riddleâ€™s answer</td>
    </tr>
    <tr>
      <td>category</td>
      <td>string</td>
      <td>Optional</td>
      <td>An update to the classification of the riddle. It should be one-word and not contain spaces. The original database includes the categories: easy, hard, funny, kids, math, and word. This is not an enum and more can be added.</td>
    </tr>
    <tr>
      <td>source</td>
      <td>string</td>
      <td>Optional</td>
      <td>An update to the source of the riddle</td>
    </tr>
  </tbody>
</table>

<p><strong>Note</strong>: The <code class="language-plaintext highlighter-rouge">Content-Type</code> header should be set to <code class="language-plaintext highlighter-rouge">application/json</code>.</p>

<p><strong>Example request</strong></p>

<p>A curl request to update a field of a riddle:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl -X PATCH \
  'http://riddleapi.netlify.app/riddles?id=60bd0708d7dcc31bd9376abe' \
  -H 'Content-Type: application/json' \
  -d '{
  "riddle": "There'\''s only one word in the dictionary that'\''s spelled wrong. What is it?",
  "answer": "The word '\''wrong.'\'' It'\''s the only word that'\''s spelled W-R-O-N-G.",
  "category": "kids",
  "source": "https://www.prodigygame.com/main-en/blog/riddles-for-kids/"
}'
</code></pre></div></div>

<p>A successful response will return an HTTP status code of <code class="language-plaintext highlighter-rouge">200</code> and have the following schema:</p>

<table>
  <thead>
    <tr>
      <th>Field</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>message</td>
      <td>string</td>
      <td>A brief success message</td>
    </tr>
    <tr>
      <td>content</td>
      <td>object</td>
      <td>Top-level containing Riddle object</td>
    </tr>
  </tbody>
</table>

<p>Where the Riddle object has this schema:</p>

<table>
  <thead>
    <tr>
      <th>Field</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>_id</td>
      <td>string</td>
      <td>The database id for the Riddle object</td>
    </tr>
    <tr>
      <td>riddle</td>
      <td>string</td>
      <td>The riddleâ€™s question</td>
    </tr>
    <tr>
      <td>answer</td>
      <td>string</td>
      <td>The riddleâ€™s answer</td>
    </tr>
    <tr>
      <td>category</td>
      <td>string</td>
      <td>A classification of the riddle. The original database includes the categories: easy, hard, funny, kids, math, and word. This is not an enum and more can be added.</td>
    </tr>
    <tr>
      <td>source</td>
      <td>string</td>
      <td>The source of the riddle</td>
    </tr>
  </tbody>
</table>

<p><strong>Example response</strong></p>

<p>A successful response to a <code class="language-plaintext highlighter-rouge">PATCH</code> request is an object like below:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>HTTP/1.1 200 OK
Content-Type: application/json; charset=utf-8

{
  "message": Successfully updated riddle",
  "content": {
    "_id": "60bd0708d7dcc31bd9376abe",
    "riddle": "I'm tall when I'm young, and I'm short when I'm old. What am I?",
    "answer": "A candle",
    "category": "easy",
    "source": "https://parade.com/947956/parade/riddles/",
  }
}
</code></pre></div></div>

<p><strong>Possible error responses</strong></p>

<p>A <code class="language-plaintext highlighter-rouge">PATCH</code> request to the /riddles endpoint may return the following errors:</p>

<table>
  <thead>
    <tr>
      <th>Error code</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>400</td>
      <td><code class="language-plaintext highlighter-rouge">Bad Request</code>: This error will be returned if a required field in the request body is missing or if the <code class="language-plaintext highlighter-rouge">category</code> field contains a space.</td>
    </tr>
    <tr>
      <td>403</td>
      <td><code class="language-plaintext highlighter-rouge">Forbidden</code>: This error will be returned if you try to modify the seed data (the initial riddles added to the database).</td>
    </tr>
    <tr>
      <td>404</td>
      <td><code class="language-plaintext highlighter-rouge">Not Found</code>: This error will occur if the requested riddle <code class="language-plaintext highlighter-rouge">id</code> is not found in the database.</td>
    </tr>
    <tr>
      <td>500</td>
      <td><code class="language-plaintext highlighter-rouge">Internal Server Error</code>: An unexpected error occurred on the server.</td>
    </tr>
  </tbody>
</table>

<p><a href="#riddles-api-documentation">Top of API documentation</a></p>

<p><a href="#introduction">Top of README</a></p>
:ET